{"version":3,"sources":["serviceWorker.js","containers/Header.js","actions/userAction.js","containers/Product.js","actions/cartAction.js","components/loading.js","containers/Catalog.js","hooks/http.js","app/Home/Homepage.js","app/Cart/Cartpage.js","app/Order/OrderComplete.js","app/App.js","reducers/cartReducer.js","reducers/userReducer.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","items","reduce","total","item","price","_this","this","cartItems","props","cart","listProduct","popupTrigger","react_default","a","createElement","Icon","link","name","length","popupContent","List","divided","relaxed","map","index","Item","key","Content","floated","react_currency_formatter_umd_default","quantity","currency","product_name","cartTotal","style","textAlign","Button","color","href","content","className","Container","Popup","flowing","wide","offset","trigger","position","borderRadius","padding","width","on","user","email","onClick","logout","React","Component","connect","state","dispatch","type","payload","Product","Grid","Column","marginBottom","Card","Image","src","product","product_image","wrapped","ui","Meta","extra","addCart","console","log","Loading","Row","columns","label","MOCK_DATA","origin","Catalog","_useHttp","url","_ref","Object","toArray","_useState","useState","_useState2","slicedToArray","isLoading","setIsLoading","_useState3","_useState4","fetchData","setFetchData","useEffect","axios","get","then","data","catch","err","useHttp","_useHttp2","loadedCatalog","loading_Loading","containers_Product","id","Home","containers_Catalog","Cart","removeItem","removeCart","placeOrder","clearCart","history","push","responseGoogle","response","saveCredential","tokenId","profileObj","_this2","as","google_login_default","clientId","buttonText","onSuccess","onFailure","cookiePolicy","disabled","isLoggedIn","marginTop","token","order","OrderComplete","size","App","react_router_dom","containers_Header","react_router","path","exact","component","Homepage","Cartpage","cartReducer","arguments","undefined","totals","action","objectSpread","concat","toConsumableArray","filter","idx","userReducer","enhancer","compose","applyMiddleware","logger","persistState","createStore","combineReducers","ReactDOM","render","es","store","Store","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05405c51.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Icon, Popup, Button, List } from 'semantic-ui-react';\nimport { logout } from '../actions/userAction';\nimport Currency from 'react-currency-formatter';\n\nclass Header extends React.Component {\n\n    cartTotal(items) {\n        return items.reduce(function (total, item) {\n            return total + item.price;\n        }, 0);\n    }\n    render() {\n        const style = {\n            borderRadius: 0,\n            padding: '2em',\n            width: '400px'\n        }\n\n        const cartItems = this.props.cart.listProduct;\n        const popupTrigger = (<span><Icon link name='cart'/> {cartItems.length}</span>)\n        let popupContent = <div></div>;\n\n        if (cartItems.length) {\n            popupContent = (\n                <div>\n                    <List divided relaxed>\n                        {\n                            cartItems.map((item, index) => {\n                                return (\n                                    <List.Item key={index}>\n                                        <List.Content floated='right'>\n                                            <Currency quantity={item.price} currency=\"IDR\"/>\n                                        </List.Content>\n                                        <List.Content>\n                                            <strong>{item.product_name}</strong>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            })\n                        }\n                        <List.Item>\n                            <List.Content floated='right'>\n                                <strong><Currency quantity={this.cartTotal(cartItems)} currency=\"IDR\"/></strong>\n                            </List.Content>\n                            <List.Content>\n                                <strong>{`Total`}</strong>\n                            </List.Content>\n                        </List.Item>\n                    </List>\n                    <div style={{textAlign:'center'}}>\n                        <Button color='red' href=\"/cart\" content='Checkout' />\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"header-nav\">\n                <Container>\n                    <div className=\"logo-box\" style={{textAlign:'center'}}>\n                        <span className=\"logo\"><a href=\"/\" style={{color:'#333'}}>Logo</a></span>\n                        <span className=\"cart-box\">\n                            <Popup flowing wide\n                                offset='0, 10px'\n                                trigger={popupTrigger}\n                                content={popupContent}\n                                position='bottom left'\n                                style={style}\n                                on='click'\n                            />\n                        </span>\n                        {   this.props.user.email &&\n                            <span className=\"user-box\">\n                                <strong>{this.props.user.email}</strong>\n                            </span>\n                        }\n\n                        {   this.props.user.email &&\n                            <span className=\"logout\">\n                                <a onClick={() => this.props.logout()}>\n                                    <small><strong>Logout</strong></small>\n                                </a>\n                            </span>\n                        }\n                    </div>\n                </Container>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.cart,\n        user: state.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => {\n            dispatch(logout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\n","export function saveCredential (token, email) {\n    return {\n        type: \"SAVE_CREDENTIAL\",\n        payload: {\n            token: token,\n            email: email\n        }\n    }\n}\n\nexport function placeOrder (cart) {\n    return {\n        type: \"PLACE_ORDER\",\n        payload: {\n            order: cart\n        }\n    }\n}\n\nexport function logout () {\n    return {\n        type: \"LOGOUT\",\n        payload: {}\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addCart } from '../actions/cartAction';\nimport { Card, Grid, Image, Icon } from 'semantic-ui-react';\nimport Currency from 'react-currency-formatter';\n\nclass Product extends React.Component {\n    render() {\n        return (\n            <Grid.Column>\n                <div style={{marginBottom: '30px'}}>\n                    <Card>\n                        <Image src={this.props.product.product_image} wrapped ui={false} />\n                        <Card.Content>\n                            <Card.Header>{this.props.product.product_name}</Card.Header>\n                            <Card.Meta>\n                                <strong className='catalog-price'>\n                                    <Currency quantity={this.props.product.price} currency=\"IDR\"/>\n                                </strong>\n                            </Card.Meta>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <a onClick={() => this.props.addCart(this.props.product)}>\n                                <strong><Icon name='cart'/> Add to Cart</strong>\n                            </a>\n                        </Card.Content>\n                    </Card>\n                </div>\n            </Grid.Column>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return { cart: state.cart }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addCart: (product) => {\n            console.log(product);\n            dispatch(addCart(product));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n","export function addCart (product) {\n    return {\n        type: \"ADD_ITEM\",\n        payload: {\n            price: product.price,\n            product: product\n        }\n    }\n}\n\nexport function removeCart (product, index) {\n    return {\n        type: \"REMOVE_ITEM\",\n        payload: {\n            index: index,\n            price: product.price,\n            product: product\n        }\n    }\n}\n\nexport function clearCart () {\n    return {\n        type: \"CLEAR_CART\",\n        payload: {}\n    }\n}","import React from 'react';\nimport { Container, Grid } from 'semantic-ui-react';\n\nexport default class Loading extends React.Component {\n    render() {\n        return (\n            <Container>\n                <div className=\"product-list\">\n                    <Grid>\n                        <Grid.Row columns={1}>\n                            <p>{this.props.label}</p>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n            </Container>\n        )\n    }\n};","import React from 'react';\nimport { Container, Grid } from 'semantic-ui-react';\nimport Product from './Product';\nimport Loading from '../components/loading';\nimport { useHttp } from '../hooks/http';\nconst MOCK_DATA = window.location.origin + '/MOCK_DATA.json';\n\nconst Catalog = props => {\n\n    const [isLoading, fetchData] = useHttp(\n        MOCK_DATA,\n        []\n    );\n\n    const loadedCatalog = fetchData ?\n        fetchData.data:[];\n\n    let content = <Loading label=\"Loading..\"/>;\n    if (!isLoading && loadedCatalog) {\n        content = (\n            <Container>\n                <div className=\"product-list\">\n                    <Grid>\n                        <Grid.Row columns={4}>\n                            {\n                                loadedCatalog.map((product)=>(\n                                    <Product key={product.id} product={product}/>\n                                ))\n                            }\n                        </Grid.Row>\n                    </Grid>\n                </div>\n            </Container>\n        )\n    } else if (\n        !isLoading && !loadedCatalog\n    ) {\n        content = <Loading label=\"Failed to load product\"/>;\n    }\n\n    return content;\n}\n\nexport default Catalog;","import {\n    useState,\n    useEffect\n} from 'react'\nimport axios from 'axios';\n\nexport const useHttp = (url, []) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [fetchData, setFetchData] = useState(null);\n    useEffect(() => {\n        setIsLoading(true);\n        axios.get(url).then(data => {\n            setIsLoading(false);\n            setFetchData(data);\n        }).catch(err => {\n            setIsLoading(false);\n            console.log(err);\n        });\n    }, []);\n\n    return [isLoading, fetchData];\n\n}","import React from 'react';\nimport '../App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport Catalog from '../../containers/Catalog';\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n        <Catalog/>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Grid, List, Icon, Button } from 'semantic-ui-react';\nimport { removeCart, clearCart } from '../../actions/cartAction';\nimport { placeOrder, saveCredential } from '../../actions/userAction';\nimport Currency from 'react-currency-formatter';\nimport GoogleLogin from 'react-google-login';\n\n\nclass Cart extends React.Component {\n\n    removeItem = (item, index) => {\n        return () => {\n            this.props.removeCart(item, index);\n        }\n    }\n\n    placeOrder = () => {\n        return () => {\n            this.props.placeOrder(this.props.cart.listProduct);\n            this.props.clearCart();\n            this.props.history.push(`/order/complete`);\n        }\n    }\n\n    responseGoogle = (response) => {\n        this.props.saveCredential(response.tokenId, response.profileObj.email)\n    }\n\n    render() {\n        const cartItems = this.props.cart.listProduct;\n        return (\n            <div className=\"App\">\n                <Container style={{width:'800px'}}>\n                    <Grid>\n                        <Grid.Row columns={2}>\n                            <Grid.Column>\n                                <div>\n                                    {cartItems.map((item, index) => {\n                                        return (\n                                            <List key={index} divided relaxed>\n                                                <List.Item>\n                                                    <List.Content floated='right'>\n                                                        <Currency quantity={item.price} currency=\"IDR\"/>\n                                                        <button className=\"remove-cart_btn\" onClick={this.removeItem(item, index)}>\n                                                            <Icon name=\"trash alternate outline\"/>\n                                                        </button>\n                                                    </List.Content>\n                                                    <List.Content>\n                                                        <List.Header as='a'>{item.product_name}</List.Header>\n                                                    </List.Content>\n                                                </List.Item>\n                                            </List>\n                                        )\n                                    })}\n                                </div>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <div style={{textAlign:'center'}}>\n                                    {\n                                        !this.props.user.email &&\n                                        <div>\n                                            <GoogleLogin\n                                                clientId=\"438627225820-cfb456teukq4hsom88pgi9heucgsb7kv.apps.googleusercontent.com\"\n                                                buttonText=\"Login to Place Order\" onSuccess={this.responseGoogle} onFailure={this.responseGoogle}\n                                                cookiePolicy={'single_host_origin'}\n                                            />\n                                            <br/>\n                                        </div>\n                                    }\n\n                                    <Button disabled={!this.props.user.isLoggedIn} style={{marginTop:'10px'}}\n                                        onClick={this.placeOrder()}\n                                        color='red' content='Place Order'\n                                    />\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.cart,\n        user: state.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeCart: (product, index) => {\n            dispatch(removeCart(product, index));\n        },\n\n        clearCart: () => {\n            dispatch(clearCart());\n        },\n\n        saveCredential: (token, email) => {\n            dispatch(saveCredential(token, email));\n        },\n\n        placeOrder: (cart) => {\n            dispatch(placeOrder(cart));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Grid, Icon } from 'semantic-ui-react';\n\n\nclass OrderComplete extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Container style={{width:'800px'}}>\n                    <Grid>\n                        <Grid.Row columns={1}>\n                            <Grid.Column>\n                                <div style={{textAlign:'center'}}>\n                                    <Icon name='check' color='blue' size='large'/>\n                                    <h3>Thanks {this.props.user.email}, Order Placed!</h3>\n                                    <a href=\"/\"><strong>Home</strong></a>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.cart,\n        user: state.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderComplete);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport Header from '../containers/Header';\nimport Homepage from './Home/Homepage';\nimport Cartpage from './Cart/Cartpage';\nimport OrderComplete from './Order/OrderComplete';\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <Route path=\"/\" exact component={Homepage} />\n      <Route path=\"/cart/\" exact component={Cartpage} />\n      <Route path=\"/order/complete/\" exact component={OrderComplete} />\n    </Router>\n  );\n}\n\nexport default App;\n","const cartReducer = (state = {\n    totals: 0,\n    listProduct: []\n}, action) => {\n    switch (action.type) {\n        case \"ADD_ITEM\":\n            state = {\n                ...state,\n                totals: state.totals + action.payload.price,\n                listProduct: [...state.listProduct, action.payload.product]\n            };\n            break;\n\n        case \"REMOVE_ITEM\":\n            state = {\n                ...state,\n                totals: state.totals - action.payload.price,\n                listProduct: state.listProduct.filter((item, idx) => {\n                    return idx != action.payload.index;\n                })\n            }\n            break;\n\n        case \"CLEAR_CART\":\n            state = {\n                ...state,\n                listProduct: []\n            }\n            break;\n        default:\n            break;\n\n    }\n    return state;\n};\n\nexport default cartReducer;","const userReducer = (state = {\n    order: [],\n    isLoggedIn: false,\n    email: \"\"\n}, action) => {\n    switch (action.type) {\n        case \"SAVE_CREDENTIAL\":\n            state = {\n                ...state,\n                isLoggedIn: action.payload.token ? true : false,\n                email: action.payload.email\n            };\n            break;\n\n        case \"PLACE_ORDER\":\n            state = {\n                ...state,\n                order: [...state.order, action.payload.order]\n            }\n            break;\n\n        case \"LOGOUT\":\n            state = {\n                ...state,\n                isLoggedIn: false,\n                email: null\n            }\n            break;\n\n        default:\n            break;\n\n    }\n    return state;\n};\n\nexport default userReducer;","import {\n    createStore,\n    combineReducers,\n    applyMiddleware,\n    compose\n} from 'redux';\nimport logger from 'redux-logger';\nimport cart from './reducers/cartReducer';\nimport user from './reducers/userReducer';\nimport persistState from 'redux-localstorage'\n\nconst enhancer = compose(\n    applyMiddleware(logger),\n    persistState(/*paths, config*/),\n);\n\nexport default createStore(\n    combineReducers({ cart, user }), {}, enhancer\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport Store from './store'\n\nReactDOM.render(\n    <Provider store={Store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}